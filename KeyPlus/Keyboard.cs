using System;
using System.Collections.Generic;
using System.Windows.Forms;

namespace KeyboardHook01
{
    class Keyboard
    {
        public static Dictionary<int, string> keyName = new Dictionary<int, string>();
        public static Dictionary<int, string> keyChar = new Dictionary<int, string>();

        /// <summary>
        /// Total statistics for hit times
        /// </summary>
        public static Dictionary<int, ulong> keyCount = new Dictionary<int, ulong>();

        public static string keyCountStartsFrom;

        /// <summary>
        /// Current statistics for hit times
        /// </summary>
        public static Dictionary<int, ulong> keyCountCurrent = new Dictionary<int, ulong>();

        public static DateTime keyCountCurrentStartsFrom;

        /// <summary>
        /// Store the moment of current pressed keys
        /// </summary>
        public static Stack<DateTime> keyPressedMoment = new Stack<DateTime>();

        /// <summary>
        /// mainly for mechanical sound emulates
        /// </summary>
        public static HashSet<int> keysDown = new HashSet<int>();

        public static void InitializeMap()
        {
            InitializeKeyChar();
            InitializeKeyName();
            InitializeKeyCount();
            InitializeKeyCountCurrent();
        }

        public static void InitializeKeyName()
        {
            keyName.Add((int)Keys.Escape, "ESC");
            keyName.Add((int)Keys.F1, "F1");
            keyName.Add((int)Keys.F2, "F2");
            keyName.Add((int)Keys.F3, "F3");
            keyName.Add((int)Keys.F4, "F4");
            keyName.Add((int)Keys.F5, "F5");
            keyName.Add((int)Keys.F6, "F6");
            keyName.Add((int)Keys.F7, "F7");
            keyName.Add((int)Keys.F8, "F8");
            keyName.Add((int)Keys.F9, "F9");
            keyName.Add((int)Keys.F10, "F10");
            keyName.Add((int)Keys.F11, "F11");
            keyName.Add((int)Keys.F12, "F12");
            keyName.Add((int)Keys.A, "A");
            keyName.Add((int)Keys.B, "B");
            keyName.Add((int)Keys.C, "C");
            keyName.Add((int)Keys.D, "D");
            keyName.Add((int)Keys.E, "E");
            keyName.Add((int)Keys.F, "F");
            keyName.Add((int)Keys.G, "G");
            keyName.Add((int)Keys.H, "H");
            keyName.Add((int)Keys.I, "I");
            keyName.Add((int)Keys.J, "J");
            keyName.Add((int)Keys.K, "K");
            keyName.Add((int)Keys.L, "L");
            keyName.Add((int)Keys.M, "M");
            keyName.Add((int)Keys.N, "N");
            keyName.Add((int)Keys.O, "O");
            keyName.Add((int)Keys.P, "P");
            keyName.Add((int)Keys.Q, "Q");
            keyName.Add((int)Keys.R, "R");
            keyName.Add((int)Keys.S, "S");
            keyName.Add((int)Keys.T, "T");
            keyName.Add((int)Keys.U, "U");
            keyName.Add((int)Keys.V, "V");
            keyName.Add((int)Keys.W, "W");
            keyName.Add((int)Keys.X, "X");
            keyName.Add((int)Keys.Y, "Y");
            keyName.Add((int)Keys.Z, "Z");
            keyName.Add((int)Keys.D0, "Digit 0");
            keyName.Add((int)Keys.D1, "Digit 1");
            keyName.Add((int)Keys.D2, "Digit 2");
            keyName.Add((int)Keys.D3, "Digit 3");
            keyName.Add((int)Keys.D4, "Digit 4");
            keyName.Add((int)Keys.D5, "Digit 5");
            keyName.Add((int)Keys.D6, "Digit 6");
            keyName.Add((int)Keys.D7, "Digit 7");
            keyName.Add((int)Keys.D8, "Digit 8");
            keyName.Add((int)Keys.D9, "Digit 9");
            keyName.Add((int)Keys.LControlKey, "Left Control");
            keyName.Add((int)Keys.LShiftKey, "Left Shift");
            keyName.Add((int)Keys.LMenu, "Left Alt");
            keyName.Add((int)Keys.LWin, "Left Windows");
            keyName.Add((int)Keys.RControlKey, "Right Control");
            keyName.Add((int)Keys.RShiftKey, "Right Shift");
            keyName.Add((int)Keys.RMenu, "Right Alt");
            keyName.Add((int)Keys.RWin, "Right Windows");
            keyName.Add((int)Keys.CapsLock, "Caps Lock");
            keyName.Add((int)Keys.Back, "Back Sapce");
            keyName.Add((int)Keys.Apps, "Right Click Menu");
            keyName.Add((int)Keys.Tab, "Tab");
            keyName.Add((int)Keys.Space, "Space");
            keyName.Add((int)Keys.OemPipe, "Back Slash/Pipe");
            keyName.Add((int)Keys.Oemtilde, "Grave/Tilde");
            keyName.Add((int)Keys.OemMinus, "Dash/Underscore");
            keyName.Add((int)Keys.Oemplus, "Equal/Plus");
            keyName.Add((int)Keys.Oemcomma, "Comma/Less Than");
            keyName.Add((int)Keys.OemPeriod, "Period/Greater Than");
            keyName.Add((int)Keys.OemQuestion, "Slash/Question Mark");
            keyName.Add((int)Keys.OemQuotes, "Quotes");
            keyName.Add((int)Keys.OemSemicolon, "Semicolon/Colon");
            keyName.Add((int)Keys.OemOpenBrackets, "Left Bracket");
            keyName.Add((int)Keys.OemCloseBrackets, "Right Bracket");
            keyName.Add((int)Keys.Return, "Enter");
            keyName.Add((int)Keys.Up, "Up");
            keyName.Add((int)Keys.Down, "Down");
            keyName.Add((int)Keys.Left, "Left");
            keyName.Add((int)Keys.Right, "Right");
            keyName.Add((int)Keys.Delete, "Delete");
            keyName.Add((int)Keys.End, "End");
            keyName.Add((int)Keys.PageDown, "Page Down");
            keyName.Add((int)Keys.PageUp, "Page Up");
            keyName.Add((int)Keys.Home, "Home");
            keyName.Add((int)Keys.Insert, "Insert");
            keyName.Add((int)Keys.PrintScreen, "Print Screen");
            keyName.Add((int)Keys.Scroll, "Scroll Lock");
            keyName.Add((int)Keys.Pause, "Pause/Break");
            keyName.Add((int)Keys.NumLock, "Num Lock");
            keyName.Add((int)Keys.NumPad0, "Num Pad 0");
            keyName.Add((int)Keys.NumPad1, "Num Pad 1");
            keyName.Add((int)Keys.NumPad2, "Num Pad 2");
            keyName.Add((int)Keys.NumPad3, "Num Pad 3");
            keyName.Add((int)Keys.NumPad4, "Num Pad 4");
            keyName.Add((int)Keys.NumPad5, "Num Pad 5");
            keyName.Add((int)Keys.NumPad6, "Num Pad 6");
            keyName.Add((int)Keys.NumPad7, "Num Pad 7");
            keyName.Add((int)Keys.NumPad8, "Num Pad 8");
            keyName.Add((int)Keys.NumPad9, "Num Pad 9");
            keyName.Add((int)Keys.Divide, "Num Pad Divide");
            keyName.Add((int)Keys.Multiply, "Num Pad Multiply");
            keyName.Add((int)Keys.Subtract, "Num Pad Subtract");
            keyName.Add((int)Keys.Add, "Num Pad Add");
            keyName.Add((int)Keys.Decimal, "Num Pad Decimal");
        }

        public static void InitializeKeyChar()
        {
            keyChar.Add((int)Keys.Escape, "ESC");
            keyChar.Add((int)Keys.F1, "F1");
            keyChar.Add((int)Keys.F2, "F2");
            keyChar.Add((int)Keys.F3, "F3");
            keyChar.Add((int)Keys.F4, "F4");
            keyChar.Add((int)Keys.F5, "F5");
            keyChar.Add((int)Keys.F6, "F6");
            keyChar.Add((int)Keys.F7, "F7");
            keyChar.Add((int)Keys.F8, "F8");
            keyChar.Add((int)Keys.F9, "F9");
            keyChar.Add((int)Keys.F10, "F10");
            keyChar.Add((int)Keys.F11, "F11");
            keyChar.Add((int)Keys.F12, "F12");
            keyChar.Add((int)Keys.A, "A");
            keyChar.Add((int)Keys.B, "B");
            keyChar.Add((int)Keys.C, "C");
            keyChar.Add((int)Keys.D, "D");
            keyChar.Add((int)Keys.E, "E");
            keyChar.Add((int)Keys.F, "F");
            keyChar.Add((int)Keys.G, "G");
            keyChar.Add((int)Keys.H, "H");
            keyChar.Add((int)Keys.I, "I");
            keyChar.Add((int)Keys.J, "J");
            keyChar.Add((int)Keys.K, "K");
            keyChar.Add((int)Keys.L, "L");
            keyChar.Add((int)Keys.M, "M");
            keyChar.Add((int)Keys.N, "N");
            keyChar.Add((int)Keys.O, "O");
            keyChar.Add((int)Keys.P, "P");
            keyChar.Add((int)Keys.Q, "Q");
            keyChar.Add((int)Keys.R, "R");
            keyChar.Add((int)Keys.S, "S");
            keyChar.Add((int)Keys.T, "T");
            keyChar.Add((int)Keys.U, "U");
            keyChar.Add((int)Keys.V, "V");
            keyChar.Add((int)Keys.W, "W");
            keyChar.Add((int)Keys.X, "X");
            keyChar.Add((int)Keys.Y, "Y");
            keyChar.Add((int)Keys.Z, "Z");
            keyChar.Add((int)Keys.D0, "0");
            keyChar.Add((int)Keys.D1, "1");
            keyChar.Add((int)Keys.D2, "2");
            keyChar.Add((int)Keys.D3, "3");
            keyChar.Add((int)Keys.D4, "4");
            keyChar.Add((int)Keys.D5, "5");
            keyChar.Add((int)Keys.D6, "6");
            keyChar.Add((int)Keys.D7, "7");
            keyChar.Add((int)Keys.D8, "8");
            keyChar.Add((int)Keys.D9, "9");
            keyChar.Add((int)Keys.LControlKey, "LCTRL");
            keyChar.Add((int)Keys.LShiftKey, "LSHIFT");
            keyChar.Add((int)Keys.LMenu, "LALT");
            keyChar.Add((int)Keys.LWin, "LWIN");
            keyChar.Add((int)Keys.RControlKey, "RCTRL");
            keyChar.Add((int)Keys.RShiftKey, "RSHIFT");
            keyChar.Add((int)Keys.RMenu, "RALT");
            keyChar.Add((int)Keys.RWin, "RWIN");
            keyChar.Add((int)Keys.CapsLock, "CAPS");
            keyChar.Add((int)Keys.Back, "BS");
            keyChar.Add((int)Keys.Apps, "MENU");
            keyChar.Add((int)Keys.Tab, "TAB");
            keyChar.Add((int)Keys.Space, "SPACE");
            keyChar.Add((int)Keys.OemPipe, "\\");
            keyChar.Add((int)Keys.Oemtilde, "`");
            keyChar.Add((int)Keys.OemMinus, "-");
            keyChar.Add((int)Keys.Oemplus, "=");
            keyChar.Add((int)Keys.Oemcomma, ",");
            keyChar.Add((int)Keys.OemPeriod, ".");
            keyChar.Add((int)Keys.OemQuestion, "/");
            keyChar.Add((int)Keys.OemQuotes, "'");
            keyChar.Add((int)Keys.OemSemicolon, ";");
            keyChar.Add((int)Keys.OemOpenBrackets, "[");
            keyChar.Add((int)Keys.OemCloseBrackets, "]");
            keyChar.Add((int)Keys.Return, "Enter");
            keyChar.Add((int)Keys.Up, "Up");
            keyChar.Add((int)Keys.Down, "Down");
            keyChar.Add((int)Keys.Left, "Left");
            keyChar.Add((int)Keys.Right, "Right");
            keyChar.Add((int)Keys.Delete, "Del");
            keyChar.Add((int)Keys.End, "End");
            keyChar.Add((int)Keys.PageDown, "PgDn");
            keyChar.Add((int)Keys.PageUp, "PaUp");
            keyChar.Add((int)Keys.Home, "Home");
            keyChar.Add((int)Keys.Insert, "Ins");
            keyChar.Add((int)Keys.PrintScreen, "PScr");
            keyChar.Add((int)Keys.Scroll, "Scroll");
            keyChar.Add((int)Keys.Pause, "Pause");
            keyChar.Add((int)Keys.NumLock, "NumLk");
            keyChar.Add((int)Keys.NumPad0, "0");
            keyChar.Add((int)Keys.NumPad1, "1");
            keyChar.Add((int)Keys.NumPad2, "2");
            keyChar.Add((int)Keys.NumPad3, "3");
            keyChar.Add((int)Keys.NumPad4, "4");
            keyChar.Add((int)Keys.NumPad5, "5");
            keyChar.Add((int)Keys.NumPad6, "6");
            keyChar.Add((int)Keys.NumPad7, "7");
            keyChar.Add((int)Keys.NumPad8, "8");
            keyChar.Add((int)Keys.NumPad9, "9");
            keyChar.Add((int)Keys.Divide, "/");
            keyChar.Add((int)Keys.Multiply, "*");
            keyChar.Add((int)Keys.Subtract, "-");
            keyChar.Add((int)Keys.Add, "+");
            keyChar.Add((int)Keys.Decimal, ".");
        }

        public static void InitializeKeyCount()
        {
            keyCount.Add((int)Keys.Escape, 0);
            keyCount.Add((int)Keys.F1, 0);
            keyCount.Add((int)Keys.F2, 0);
            keyCount.Add((int)Keys.F3, 0);
            keyCount.Add((int)Keys.F4, 0);
            keyCount.Add((int)Keys.F5, 0);
            keyCount.Add((int)Keys.F6, 0);
            keyCount.Add((int)Keys.F7, 0);
            keyCount.Add((int)Keys.F8, 0);
            keyCount.Add((int)Keys.F9, 0);
            keyCount.Add((int)Keys.F10, 0);
            keyCount.Add((int)Keys.F11, 0);
            keyCount.Add((int)Keys.F12, 0);
            keyCount.Add((int)Keys.A, 0);
            keyCount.Add((int)Keys.B, 0);
            keyCount.Add((int)Keys.C, 0);
            keyCount.Add((int)Keys.D, 0);
            keyCount.Add((int)Keys.E, 0);
            keyCount.Add((int)Keys.F, 0);
            keyCount.Add((int)Keys.G, 0);
            keyCount.Add((int)Keys.H, 0);
            keyCount.Add((int)Keys.I, 0);
            keyCount.Add((int)Keys.J, 0);
            keyCount.Add((int)Keys.K, 0);
            keyCount.Add((int)Keys.L, 0);
            keyCount.Add((int)Keys.M, 0);
            keyCount.Add((int)Keys.N, 0);
            keyCount.Add((int)Keys.O, 0);
            keyCount.Add((int)Keys.P, 0);
            keyCount.Add((int)Keys.Q, 0);
            keyCount.Add((int)Keys.R, 0);
            keyCount.Add((int)Keys.S, 0);
            keyCount.Add((int)Keys.T, 0);
            keyCount.Add((int)Keys.U, 0);
            keyCount.Add((int)Keys.V, 0);
            keyCount.Add((int)Keys.W, 0);
            keyCount.Add((int)Keys.X, 0);
            keyCount.Add((int)Keys.Y, 0);
            keyCount.Add((int)Keys.Z, 0);
            keyCount.Add((int)Keys.D0, 0);
            keyCount.Add((int)Keys.D1, 0);
            keyCount.Add((int)Keys.D2, 0);
            keyCount.Add((int)Keys.D3, 0);
            keyCount.Add((int)Keys.D4, 0);
            keyCount.Add((int)Keys.D5, 0);
            keyCount.Add((int)Keys.D6, 0);
            keyCount.Add((int)Keys.D7, 0);
            keyCount.Add((int)Keys.D8, 0);
            keyCount.Add((int)Keys.D9, 0);
            keyCount.Add((int)Keys.LControlKey, 0);
            keyCount.Add((int)Keys.LShiftKey, 0);
            keyCount.Add((int)Keys.LMenu, 0);
            keyCount.Add((int)Keys.LWin, 0);
            keyCount.Add((int)Keys.RControlKey, 0);
            keyCount.Add((int)Keys.RShiftKey, 0);
            keyCount.Add((int)Keys.RMenu, 0);
            keyCount.Add((int)Keys.RWin, 0);
            keyCount.Add((int)Keys.CapsLock, 0);
            keyCount.Add((int)Keys.Back, 0);
            keyCount.Add((int)Keys.Apps, 0);
            keyCount.Add((int)Keys.Tab, 0);
            keyCount.Add((int)Keys.Space, 0);
            keyCount.Add((int)Keys.OemPipe, 0);
            keyCount.Add((int)Keys.Oemtilde, 0);
            keyCount.Add((int)Keys.OemMinus, 0);
            keyCount.Add((int)Keys.Oemplus, 0);
            keyCount.Add((int)Keys.Oemcomma, 0);
            keyCount.Add((int)Keys.OemPeriod, 0);
            keyCount.Add((int)Keys.OemQuestion, 0);
            keyCount.Add((int)Keys.OemQuotes, 0);
            keyCount.Add((int)Keys.OemSemicolon, 0);
            keyCount.Add((int)Keys.OemOpenBrackets, 0);
            keyCount.Add((int)Keys.OemCloseBrackets, 0);
            keyCount.Add((int)Keys.Return, 0);
            keyCount.Add((int)Keys.Up, 0);
            keyCount.Add((int)Keys.Down, 0);
            keyCount.Add((int)Keys.Left, 0);
            keyCount.Add((int)Keys.Right, 0);
            keyCount.Add((int)Keys.Delete, 0);
            keyCount.Add((int)Keys.End, 0);
            keyCount.Add((int)Keys.PageDown, 0);
            keyCount.Add((int)Keys.PageUp, 0);
            keyCount.Add((int)Keys.Home, 0);
            keyCount.Add((int)Keys.Insert, 0);
            keyCount.Add((int)Keys.PrintScreen, 0);
            keyCount.Add((int)Keys.Scroll, 0);
            keyCount.Add((int)Keys.Pause, 0);
            keyCount.Add((int)Keys.NumLock, 0);
            keyCount.Add((int)Keys.NumPad0, 0);
            keyCount.Add((int)Keys.NumPad1, 0);
            keyCount.Add((int)Keys.NumPad2, 0);
            keyCount.Add((int)Keys.NumPad3, 0);
            keyCount.Add((int)Keys.NumPad4, 0);
            keyCount.Add((int)Keys.NumPad5, 0);
            keyCount.Add((int)Keys.NumPad6, 0);
            keyCount.Add((int)Keys.NumPad7, 0);
            keyCount.Add((int)Keys.NumPad8, 0);
            keyCount.Add((int)Keys.NumPad9, 0);
            keyCount.Add((int)Keys.Divide, 0);
            keyCount.Add((int)Keys.Multiply, 0);
            keyCount.Add((int)Keys.Subtract, 0);
            keyCount.Add((int)Keys.Add, 0);
            keyCount.Add((int)Keys.Decimal, 0);
        }

        public static void InitializeKeyCountCurrent()
        {
            keyCountCurrent.Add((int)Keys.Escape, 0);
            keyCountCurrent.Add((int)Keys.F1, 0);
            keyCountCurrent.Add((int)Keys.F2, 0);
            keyCountCurrent.Add((int)Keys.F3, 0);
            keyCountCurrent.Add((int)Keys.F4, 0);
            keyCountCurrent.Add((int)Keys.F5, 0);
            keyCountCurrent.Add((int)Keys.F6, 0);
            keyCountCurrent.Add((int)Keys.F7, 0);
            keyCountCurrent.Add((int)Keys.F8, 0);
            keyCountCurrent.Add((int)Keys.F9, 0);
            keyCountCurrent.Add((int)Keys.F10, 0);
            keyCountCurrent.Add((int)Keys.F11, 0);
            keyCountCurrent.Add((int)Keys.F12, 0);
            keyCountCurrent.Add((int)Keys.A, 0);
            keyCountCurrent.Add((int)Keys.B, 0);
            keyCountCurrent.Add((int)Keys.C, 0);
            keyCountCurrent.Add((int)Keys.D, 0);
            keyCountCurrent.Add((int)Keys.E, 0);
            keyCountCurrent.Add((int)Keys.F, 0);
            keyCountCurrent.Add((int)Keys.G, 0);
            keyCountCurrent.Add((int)Keys.H, 0);
            keyCountCurrent.Add((int)Keys.I, 0);
            keyCountCurrent.Add((int)Keys.J, 0);
            keyCountCurrent.Add((int)Keys.K, 0);
            keyCountCurrent.Add((int)Keys.L, 0);
            keyCountCurrent.Add((int)Keys.M, 0);
            keyCountCurrent.Add((int)Keys.N, 0);
            keyCountCurrent.Add((int)Keys.O, 0);
            keyCountCurrent.Add((int)Keys.P, 0);
            keyCountCurrent.Add((int)Keys.Q, 0);
            keyCountCurrent.Add((int)Keys.R, 0);
            keyCountCurrent.Add((int)Keys.S, 0);
            keyCountCurrent.Add((int)Keys.T, 0);
            keyCountCurrent.Add((int)Keys.U, 0);
            keyCountCurrent.Add((int)Keys.V, 0);
            keyCountCurrent.Add((int)Keys.W, 0);
            keyCountCurrent.Add((int)Keys.X, 0);
            keyCountCurrent.Add((int)Keys.Y, 0);
            keyCountCurrent.Add((int)Keys.Z, 0);
            keyCountCurrent.Add((int)Keys.D0, 0);
            keyCountCurrent.Add((int)Keys.D1, 0);
            keyCountCurrent.Add((int)Keys.D2, 0);
            keyCountCurrent.Add((int)Keys.D3, 0);
            keyCountCurrent.Add((int)Keys.D4, 0);
            keyCountCurrent.Add((int)Keys.D5, 0);
            keyCountCurrent.Add((int)Keys.D6, 0);
            keyCountCurrent.Add((int)Keys.D7, 0);
            keyCountCurrent.Add((int)Keys.D8, 0);
            keyCountCurrent.Add((int)Keys.D9, 0);
            keyCountCurrent.Add((int)Keys.LControlKey, 0);
            keyCountCurrent.Add((int)Keys.LShiftKey, 0);
            keyCountCurrent.Add((int)Keys.LMenu, 0);
            keyCountCurrent.Add((int)Keys.LWin, 0);
            keyCountCurrent.Add((int)Keys.RControlKey, 0);
            keyCountCurrent.Add((int)Keys.RShiftKey, 0);
            keyCountCurrent.Add((int)Keys.RMenu, 0);
            keyCountCurrent.Add((int)Keys.RWin, 0);
            keyCountCurrent.Add((int)Keys.CapsLock, 0);
            keyCountCurrent.Add((int)Keys.Back, 0);
            keyCountCurrent.Add((int)Keys.Apps, 0);
            keyCountCurrent.Add((int)Keys.Tab, 0);
            keyCountCurrent.Add((int)Keys.Space, 0);
            keyCountCurrent.Add((int)Keys.OemPipe, 0);
            keyCountCurrent.Add((int)Keys.Oemtilde, 0);
            keyCountCurrent.Add((int)Keys.OemMinus, 0);
            keyCountCurrent.Add((int)Keys.Oemplus, 0);
            keyCountCurrent.Add((int)Keys.Oemcomma, 0);
            keyCountCurrent.Add((int)Keys.OemPeriod, 0);
            keyCountCurrent.Add((int)Keys.OemQuestion, 0);
            keyCountCurrent.Add((int)Keys.OemQuotes, 0);
            keyCountCurrent.Add((int)Keys.OemSemicolon, 0);
            keyCountCurrent.Add((int)Keys.OemOpenBrackets, 0);
            keyCountCurrent.Add((int)Keys.OemCloseBrackets, 0);
            keyCountCurrent.Add((int)Keys.Return, 0);
            keyCountCurrent.Add((int)Keys.Up, 0);
            keyCountCurrent.Add((int)Keys.Down, 0);
            keyCountCurrent.Add((int)Keys.Left, 0);
            keyCountCurrent.Add((int)Keys.Right, 0);
            keyCountCurrent.Add((int)Keys.Delete, 0);
            keyCountCurrent.Add((int)Keys.End, 0);
            keyCountCurrent.Add((int)Keys.PageDown, 0);
            keyCountCurrent.Add((int)Keys.PageUp, 0);
            keyCountCurrent.Add((int)Keys.Home, 0);
            keyCountCurrent.Add((int)Keys.Insert, 0);
            keyCountCurrent.Add((int)Keys.PrintScreen, 0);
            keyCountCurrent.Add((int)Keys.Scroll, 0);
            keyCountCurrent.Add((int)Keys.Pause, 0);
            keyCountCurrent.Add((int)Keys.NumLock, 0);
            keyCountCurrent.Add((int)Keys.NumPad0, 0);
            keyCountCurrent.Add((int)Keys.NumPad1, 0);
            keyCountCurrent.Add((int)Keys.NumPad2, 0);
            keyCountCurrent.Add((int)Keys.NumPad3, 0);
            keyCountCurrent.Add((int)Keys.NumPad4, 0);
            keyCountCurrent.Add((int)Keys.NumPad5, 0);
            keyCountCurrent.Add((int)Keys.NumPad6, 0);
            keyCountCurrent.Add((int)Keys.NumPad7, 0);
            keyCountCurrent.Add((int)Keys.NumPad8, 0);
            keyCountCurrent.Add((int)Keys.NumPad9, 0);
            keyCountCurrent.Add((int)Keys.Divide, 0);
            keyCountCurrent.Add((int)Keys.Multiply, 0);
            keyCountCurrent.Add((int)Keys.Subtract, 0);
            keyCountCurrent.Add((int)Keys.Add, 0);
            keyCountCurrent.Add((int)Keys.Decimal, 0);
            keyCountCurrentStartsFrom = DateTime.Now;
        }

        public static void ResetCount()
        {
            keyCount[(int)Keys.Escape] = 0;
            keyCount[(int)Keys.F1] = 0;
            keyCount[(int)Keys.F2] = 0;
            keyCount[(int)Keys.F3] = 0;
            keyCount[(int)Keys.F4] = 0;
            keyCount[(int)Keys.F5] = 0;
            keyCount[(int)Keys.F6] = 0;
            keyCount[(int)Keys.F7] = 0;
            keyCount[(int)Keys.F8] = 0;
            keyCount[(int)Keys.F9] = 0;
            keyCount[(int)Keys.F10] = 0;
            keyCount[(int)Keys.F11] = 0;
            keyCount[(int)Keys.F12] = 0;
            keyCount[(int)Keys.A] = 0;
            keyCount[(int)Keys.B] = 0;
            keyCount[(int)Keys.C] = 0;
            keyCount[(int)Keys.D] = 0;
            keyCount[(int)Keys.E] = 0;
            keyCount[(int)Keys.F] = 0;
            keyCount[(int)Keys.G] = 0;
            keyCount[(int)Keys.H] = 0;
            keyCount[(int)Keys.I] = 0;
            keyCount[(int)Keys.J] = 0;
            keyCount[(int)Keys.K] = 0;
            keyCount[(int)Keys.L] = 0;
            keyCount[(int)Keys.M] = 0;
            keyCount[(int)Keys.N] = 0;
            keyCount[(int)Keys.O] = 0;
            keyCount[(int)Keys.P] = 0;
            keyCount[(int)Keys.Q] = 0;
            keyCount[(int)Keys.R] = 0;
            keyCount[(int)Keys.S] = 0;
            keyCount[(int)Keys.T] = 0;
            keyCount[(int)Keys.U] = 0;
            keyCount[(int)Keys.V] = 0;
            keyCount[(int)Keys.W] = 0;
            keyCount[(int)Keys.X] = 0;
            keyCount[(int)Keys.Y] = 0;
            keyCount[(int)Keys.Z] = 0;
            keyCount[(int)Keys.D0] = 0;
            keyCount[(int)Keys.D1] = 0;
            keyCount[(int)Keys.D2] = 0;
            keyCount[(int)Keys.D3] = 0;
            keyCount[(int)Keys.D4] = 0;
            keyCount[(int)Keys.D5] = 0;
            keyCount[(int)Keys.D6] = 0;
            keyCount[(int)Keys.D7] = 0;
            keyCount[(int)Keys.D8] = 0;
            keyCount[(int)Keys.D9] = 0;
            keyCount[(int)Keys.LControlKey] = 0;
            keyCount[(int)Keys.LShiftKey] = 0;
            keyCount[(int)Keys.LMenu] = 0;
            keyCount[(int)Keys.LWin] = 0;
            keyCount[(int)Keys.RControlKey] = 0;
            keyCount[(int)Keys.RShiftKey] = 0;
            keyCount[(int)Keys.RMenu] = 0;
            keyCount[(int)Keys.RWin] = 0;
            keyCount[(int)Keys.CapsLock] = 0;
            keyCount[(int)Keys.Back] = 0;
            keyCount[(int)Keys.Apps] = 0;
            keyCount[(int)Keys.Tab] = 0;
            keyCount[(int)Keys.Space] = 0;
            keyCount[(int)Keys.OemPipe] = 0;
            keyCount[(int)Keys.Oemtilde] = 0;
            keyCount[(int)Keys.OemMinus] = 0;
            keyCount[(int)Keys.Oemplus] = 0;
            keyCount[(int)Keys.Oemcomma] = 0;
            keyCount[(int)Keys.OemPeriod] = 0;
            keyCount[(int)Keys.OemQuestion] = 0;
            keyCount[(int)Keys.OemQuotes] = 0;
            keyCount[(int)Keys.OemSemicolon] = 0;
            keyCount[(int)Keys.OemOpenBrackets] = 0;
            keyCount[(int)Keys.OemCloseBrackets] = 0;
            keyCount[(int)Keys.Return] = 0;
            keyCount[(int)Keys.Up] = 0;
            keyCount[(int)Keys.Down] = 0;
            keyCount[(int)Keys.Left] = 0;
            keyCount[(int)Keys.Right] = 0;
            keyCount[(int)Keys.Delete] = 0;
            keyCount[(int)Keys.End] = 0;
            keyCount[(int)Keys.PageDown] = 0;
            keyCount[(int)Keys.PageUp] = 0;
            keyCount[(int)Keys.Home] = 0;
            keyCount[(int)Keys.Insert] = 0;
            keyCount[(int)Keys.PrintScreen] = 0;
            keyCount[(int)Keys.Scroll] = 0;
            keyCount[(int)Keys.Pause] = 0;
            keyCount[(int)Keys.NumLock] = 0;
            keyCount[(int)Keys.NumPad0] = 0;
            keyCount[(int)Keys.NumPad1] = 0;
            keyCount[(int)Keys.NumPad2] = 0;
            keyCount[(int)Keys.NumPad3] = 0;
            keyCount[(int)Keys.NumPad4] = 0;
            keyCount[(int)Keys.NumPad5] = 0;
            keyCount[(int)Keys.NumPad6] = 0;
            keyCount[(int)Keys.NumPad7] = 0;
            keyCount[(int)Keys.NumPad8] = 0;
            keyCount[(int)Keys.NumPad9] = 0;
            keyCount[(int)Keys.Divide] = 0;
            keyCount[(int)Keys.Multiply] = 0;
            keyCount[(int)Keys.Subtract] = 0;
            keyCount[(int)Keys.Add] = 0;
            keyCount[(int)Keys.Decimal] = 0;
        }

        public static void ResetCountCurrent()
        {
            keyCountCurrent[(int)Keys.Escape] = 0;
            keyCountCurrent[(int)Keys.F1] = 0;
            keyCountCurrent[(int)Keys.F2] = 0;
            keyCountCurrent[(int)Keys.F3] = 0;
            keyCountCurrent[(int)Keys.F4] = 0;
            keyCountCurrent[(int)Keys.F5] = 0;
            keyCountCurrent[(int)Keys.F6] = 0;
            keyCountCurrent[(int)Keys.F7] = 0;
            keyCountCurrent[(int)Keys.F8] = 0;
            keyCountCurrent[(int)Keys.F9] = 0;
            keyCountCurrent[(int)Keys.F10] = 0;
            keyCountCurrent[(int)Keys.F11] = 0;
            keyCountCurrent[(int)Keys.F12] = 0;
            keyCountCurrent[(int)Keys.A] = 0;
            keyCountCurrent[(int)Keys.B] = 0;
            keyCountCurrent[(int)Keys.C] = 0;
            keyCountCurrent[(int)Keys.D] = 0;
            keyCountCurrent[(int)Keys.E] = 0;
            keyCountCurrent[(int)Keys.F] = 0;
            keyCountCurrent[(int)Keys.G] = 0;
            keyCountCurrent[(int)Keys.H] = 0;
            keyCountCurrent[(int)Keys.I] = 0;
            keyCountCurrent[(int)Keys.J] = 0;
            keyCountCurrent[(int)Keys.K] = 0;
            keyCountCurrent[(int)Keys.L] = 0;
            keyCountCurrent[(int)Keys.M] = 0;
            keyCountCurrent[(int)Keys.N] = 0;
            keyCountCurrent[(int)Keys.O] = 0;
            keyCountCurrent[(int)Keys.P] = 0;
            keyCountCurrent[(int)Keys.Q] = 0;
            keyCountCurrent[(int)Keys.R] = 0;
            keyCountCurrent[(int)Keys.S] = 0;
            keyCountCurrent[(int)Keys.T] = 0;
            keyCountCurrent[(int)Keys.U] = 0;
            keyCountCurrent[(int)Keys.V] = 0;
            keyCountCurrent[(int)Keys.W] = 0;
            keyCountCurrent[(int)Keys.X] = 0;
            keyCountCurrent[(int)Keys.Y] = 0;
            keyCountCurrent[(int)Keys.Z] = 0;
            keyCountCurrent[(int)Keys.D0] = 0;
            keyCountCurrent[(int)Keys.D1] = 0;
            keyCountCurrent[(int)Keys.D2] = 0;
            keyCountCurrent[(int)Keys.D3] = 0;
            keyCountCurrent[(int)Keys.D4] = 0;
            keyCountCurrent[(int)Keys.D5] = 0;
            keyCountCurrent[(int)Keys.D6] = 0;
            keyCountCurrent[(int)Keys.D7] = 0;
            keyCountCurrent[(int)Keys.D8] = 0;
            keyCountCurrent[(int)Keys.D9] = 0;
            keyCountCurrent[(int)Keys.LControlKey] = 0;
            keyCountCurrent[(int)Keys.LShiftKey] = 0;
            keyCountCurrent[(int)Keys.LMenu] = 0;
            keyCountCurrent[(int)Keys.LWin] = 0;
            keyCountCurrent[(int)Keys.RControlKey] = 0;
            keyCountCurrent[(int)Keys.RShiftKey] = 0;
            keyCountCurrent[(int)Keys.RMenu] = 0;
            keyCountCurrent[(int)Keys.RWin] = 0;
            keyCountCurrent[(int)Keys.CapsLock] = 0;
            keyCountCurrent[(int)Keys.Back] = 0;
            keyCountCurrent[(int)Keys.Apps] = 0;
            keyCountCurrent[(int)Keys.Tab] = 0;
            keyCountCurrent[(int)Keys.Space] = 0;
            keyCountCurrent[(int)Keys.OemPipe] = 0;
            keyCountCurrent[(int)Keys.Oemtilde] = 0;
            keyCountCurrent[(int)Keys.OemMinus] = 0;
            keyCountCurrent[(int)Keys.Oemplus] = 0;
            keyCountCurrent[(int)Keys.Oemcomma] = 0;
            keyCountCurrent[(int)Keys.OemPeriod] = 0;
            keyCountCurrent[(int)Keys.OemQuestion] = 0;
            keyCountCurrent[(int)Keys.OemQuotes] = 0;
            keyCountCurrent[(int)Keys.OemSemicolon] = 0;
            keyCountCurrent[(int)Keys.OemOpenBrackets] = 0;
            keyCountCurrent[(int)Keys.OemCloseBrackets] = 0;
            keyCountCurrent[(int)Keys.Return] = 0;
            keyCountCurrent[(int)Keys.Up] = 0;
            keyCountCurrent[(int)Keys.Down] = 0;
            keyCountCurrent[(int)Keys.Left] = 0;
            keyCountCurrent[(int)Keys.Right] = 0;
            keyCountCurrent[(int)Keys.Delete] = 0;
            keyCountCurrent[(int)Keys.End] = 0;
            keyCountCurrent[(int)Keys.PageDown] = 0;
            keyCountCurrent[(int)Keys.PageUp] = 0;
            keyCountCurrent[(int)Keys.Home] = 0;
            keyCountCurrent[(int)Keys.Insert] = 0;
            keyCountCurrent[(int)Keys.PrintScreen] = 0;
            keyCountCurrent[(int)Keys.Scroll] = 0;
            keyCountCurrent[(int)Keys.Pause] = 0;
            keyCountCurrent[(int)Keys.NumLock] = 0;
            keyCountCurrent[(int)Keys.NumPad0] = 0;
            keyCountCurrent[(int)Keys.NumPad1] = 0;
            keyCountCurrent[(int)Keys.NumPad2] = 0;
            keyCountCurrent[(int)Keys.NumPad3] = 0;
            keyCountCurrent[(int)Keys.NumPad4] = 0;
            keyCountCurrent[(int)Keys.NumPad5] = 0;
            keyCountCurrent[(int)Keys.NumPad6] = 0;
            keyCountCurrent[(int)Keys.NumPad7] = 0;
            keyCountCurrent[(int)Keys.NumPad8] = 0;
            keyCountCurrent[(int)Keys.NumPad9] = 0;
            keyCountCurrent[(int)Keys.Divide] = 0;
            keyCountCurrent[(int)Keys.Multiply] = 0;
            keyCountCurrent[(int)Keys.Subtract] = 0;
            keyCountCurrent[(int)Keys.Add] = 0;
            keyCountCurrent[(int)Keys.Decimal] = 0;
            keyCountCurrentStartsFrom = DateTime.Now;
        }

        public static void Register_Key(GlobalKeyboardHook gkh)
        {
            // for qwerty 104 keyboard
            // function
            gkh.HookedKeys.Add(Keys.Escape);
            gkh.HookedKeys.Add(Keys.F1);
            gkh.HookedKeys.Add(Keys.F2);
            gkh.HookedKeys.Add(Keys.F3);
            gkh.HookedKeys.Add(Keys.F4);
            gkh.HookedKeys.Add(Keys.F5);
            gkh.HookedKeys.Add(Keys.F6);
            gkh.HookedKeys.Add(Keys.F7);
            gkh.HookedKeys.Add(Keys.F8);
            gkh.HookedKeys.Add(Keys.F9);
            gkh.HookedKeys.Add(Keys.F10);
            gkh.HookedKeys.Add(Keys.F11);
            gkh.HookedKeys.Add(Keys.F12);

            // main area
            // letters
            gkh.HookedKeys.Add(Keys.A);
            gkh.HookedKeys.Add(Keys.B);
            gkh.HookedKeys.Add(Keys.C);
            gkh.HookedKeys.Add(Keys.D);
            gkh.HookedKeys.Add(Keys.E);
            gkh.HookedKeys.Add(Keys.F);
            gkh.HookedKeys.Add(Keys.G);
            gkh.HookedKeys.Add(Keys.H);
            gkh.HookedKeys.Add(Keys.I);
            gkh.HookedKeys.Add(Keys.J);
            gkh.HookedKeys.Add(Keys.K);
            gkh.HookedKeys.Add(Keys.L);
            gkh.HookedKeys.Add(Keys.M);
            gkh.HookedKeys.Add(Keys.N);
            gkh.HookedKeys.Add(Keys.O);
            gkh.HookedKeys.Add(Keys.P);
            gkh.HookedKeys.Add(Keys.Q);
            gkh.HookedKeys.Add(Keys.R);
            gkh.HookedKeys.Add(Keys.S);
            gkh.HookedKeys.Add(Keys.T);
            gkh.HookedKeys.Add(Keys.U);
            gkh.HookedKeys.Add(Keys.V);
            gkh.HookedKeys.Add(Keys.W);
            gkh.HookedKeys.Add(Keys.X);
            gkh.HookedKeys.Add(Keys.Y);
            gkh.HookedKeys.Add(Keys.Z);
            // digits in main area
            gkh.HookedKeys.Add(Keys.D0);
            gkh.HookedKeys.Add(Keys.D1);
            gkh.HookedKeys.Add(Keys.D2);
            gkh.HookedKeys.Add(Keys.D3);
            gkh.HookedKeys.Add(Keys.D4);
            gkh.HookedKeys.Add(Keys.D5);
            gkh.HookedKeys.Add(Keys.D6);
            gkh.HookedKeys.Add(Keys.D7);
            gkh.HookedKeys.Add(Keys.D8);
            gkh.HookedKeys.Add(Keys.D9);
            // control keys
            gkh.HookedKeys.Add(Keys.LControlKey);
            gkh.HookedKeys.Add(Keys.LShiftKey);
            gkh.HookedKeys.Add(Keys.LMenu);
            gkh.HookedKeys.Add(Keys.LWin);
            gkh.HookedKeys.Add(Keys.RControlKey);
            gkh.HookedKeys.Add(Keys.RShiftKey);
            gkh.HookedKeys.Add(Keys.RMenu);
            gkh.HookedKeys.Add(Keys.RWin);
            gkh.HookedKeys.Add(Keys.CapsLock);
            gkh.HookedKeys.Add(Keys.Back);
            gkh.HookedKeys.Add(Keys.Apps);  // right click menu
            // other characters
            gkh.HookedKeys.Add(Keys.Tab);
            gkh.HookedKeys.Add(Keys.Space);
            gkh.HookedKeys.Add(Keys.OemPipe);
            gkh.HookedKeys.Add(Keys.Oemtilde);
            gkh.HookedKeys.Add(Keys.OemMinus);
            gkh.HookedKeys.Add(Keys.Oemplus);
            gkh.HookedKeys.Add(Keys.Oemcomma);
            gkh.HookedKeys.Add(Keys.OemPeriod);
            gkh.HookedKeys.Add(Keys.OemQuestion);
            gkh.HookedKeys.Add(Keys.OemQuotes);
            gkh.HookedKeys.Add(Keys.OemSemicolon);
            gkh.HookedKeys.Add(Keys.OemOpenBrackets);
            gkh.HookedKeys.Add(Keys.OemCloseBrackets);
            gkh.HookedKeys.Add(Keys.Return);

            // cursor control area
            gkh.HookedKeys.Add(Keys.Up);
            gkh.HookedKeys.Add(Keys.Down);
            gkh.HookedKeys.Add(Keys.Left);
            gkh.HookedKeys.Add(Keys.Right);
            gkh.HookedKeys.Add(Keys.Delete);
            gkh.HookedKeys.Add(Keys.End);
            gkh.HookedKeys.Add(Keys.PageDown);
            gkh.HookedKeys.Add(Keys.PageUp);
            gkh.HookedKeys.Add(Keys.Home);
            gkh.HookedKeys.Add(Keys.Insert);
            gkh.HookedKeys.Add(Keys.PrintScreen);
            gkh.HookedKeys.Add(Keys.Scroll);
            gkh.HookedKeys.Add(Keys.Pause);

            // num pad
            gkh.HookedKeys.Add(Keys.NumLock);
            // digits in num pad
            gkh.HookedKeys.Add(Keys.NumPad0);
            gkh.HookedKeys.Add(Keys.NumPad1);
            gkh.HookedKeys.Add(Keys.NumPad2);
            gkh.HookedKeys.Add(Keys.NumPad3);
            gkh.HookedKeys.Add(Keys.NumPad4);
            gkh.HookedKeys.Add(Keys.NumPad5);
            gkh.HookedKeys.Add(Keys.NumPad6);
            gkh.HookedKeys.Add(Keys.NumPad7);
            gkh.HookedKeys.Add(Keys.NumPad8);
            gkh.HookedKeys.Add(Keys.NumPad9);
            // other characters
            gkh.HookedKeys.Add(Keys.Divide);
            gkh.HookedKeys.Add(Keys.Multiply);
            gkh.HookedKeys.Add(Keys.Subtract);
            gkh.HookedKeys.Add(Keys.Add);
            gkh.HookedKeys.Add(Keys.Decimal);
        }

        public static void AddOneHit(int keyCode)
        {
            keyCount[keyCode] += 1;
            keyCountCurrent[keyCode] += 1;
        }

       
    }
}
